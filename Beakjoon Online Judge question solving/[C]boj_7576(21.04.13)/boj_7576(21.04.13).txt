문제 : 7576번 '토마토' (난이도 실버 1)
풀이시간 : 1시간 6분 18초 (풀이중)
한줄평 : 조금만 집중하면 더 빨리 풀 수 있던 문제이다. BFS에서 checkBFS를 애매한 것으로 대체하려 하면 경우의수가 기하급수적으로 증가하므로
          checkBFS는 필수이다.
 
-----알고리즘 정리-----
[알고리즘 흐름]
1. m, n을 입력받는다.
2. m * n 번만큼 (이중반복) 반복하여 tomato[i][j]에 입력받는다. (1부터 시작)
 2.1. 이 때 0을 입력받는 경우 greenTomato++한다.
 2.2. 1을 입력받은 경우 quque[rearIndex++][0, 1]에 좌표를 입력한다.
 2.3. greenTomato == 0인 경우 0을 출력하고 프로그램을 종료한다.
3.quque[level][0][0] != 0 인 동안 다음 과정을 반복한다. (quque[level][i][0, 1]에 있는 좌표를 x, y라고 하자)
 3.0. greenTomato == 0인 경우 time을 출력한 뒤 프로그램을 종료하고 그렇지 않은 경우 time++
 3.1. quque[level][0~rearIndex[level]]동안 다음 과정을 반복한다.
 3.2. tomato[x][y] == 0인 경우 greenTomato -- 한 뒤 tomato[x][y] = 1
 3.3. tomato[x +-1][y+-1] == 0인지 확인한다. 
  3.3.1. 0이 아닌 해당 좌표는 3.4~과정을 생략한다.
  3.3.2. x나 y좌표 중에 0이거나 m, n을 넘어가는 값은 바로 생략한다.
 3.4. 0인 경우 quque[nextLevel][rearIndex[nextLevel]++][0, 1]에 해당 좌표를 추가한다.
 3.5. quque[level]에 있는 모든 좌표 순환이 끝나면 rearIndex[level] = 0, level, nextLevel를 서로 바꾼다.