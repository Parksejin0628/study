문제 : 1389번 '케빈 베이컨의 6단계 법칙' (난이도 실버 1)
풀이시간 : 29분 25초
한줄평 : 간단한 BFS개념 문제였다. 이전 문제에서 BFS한테 심하게 데인 상태라 그런지 비교적 빠르고 쉽게 풀 수 있었다.
 
----알고리즘----
[핵심 아이디어]
전형적인 BFS 문제로, 각 정점까지 탐색하는데 걸리는 깊이의 합이 가장 작은 정점을 구하는 문제이다.
checkBFS가 0인 경우 그 깊이를 sum에 더한다. 이를 checkBFS가 모두 1이 될 경우 즉, 탐색할 경우의 수가 없을 경우 종료하면 된다.
 
[알고리즘 흐름]
1. n, m을 입력받는다.
2. m번만큼 다음을 반복한다.
 2.1. vertex1, vertex2를 입력받는다.
 2.2. edge[vertex1][++edgeTop[vertex1] = vertex2
 2.3. edge[vertex2][++edgeTop[vertex2] = vertex1
3. 1부터 n까지 반복하며 다음을 실행한다.
 3.1. temp = BFS(i)를 실행한다.
 3.2. 만약 temp < min인 경우 min = temp를 한다.
4. min을 출력한다.
 
[세부 함수내용]
-int BFS(int start)-
1. checkBFS[110] = {0}, sum = 0, searchStack[2][110], stackTop[2] = {-1, -1}, now = 0, next = 1, temp = 0, vertex = 0, level = 0을 선언한다.
2. searchStack[now][++stackTop[now]] = start를 한다.
3. stackTop[now] > -1인 동안 다음 과정을 반복한다.
 3.1. level ++
 3.2. 다시 한번 stackTop[now] > -1인 동안 다음 과정을 반복한다.
  3.2.1. vertex = searchStack[now][stackTop[now]--]
  3.2.2. checkBFS[vertex] == 1인 경우 continue한다.
  3.2.3. sum += level, checkBFS[vertex] = 1
  3.2.4. 1~edgeTop[vertex]동안 다음을 반복한다.
   3.2.4.1. checkBFS[edge[vertex][i]] == 0인 경우 edge[vertex][i]를 searchStack[next][++stackTop[next]]에 추가한다.
 3.3. stackTop[now] = -1, now <-> next
4. sum을 리턴한다.